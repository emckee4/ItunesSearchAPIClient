/*
TVEpisodeTrackResultItem provides decoding of the json results of the ItunesSearchClient
Generated by Evan McKee on 14/11/2019
*/

import Foundation


public class TVEpisodeTrackResultItem: TrackResultItem {
    public let collectionCensoredName: String?
    public let collectionHdPrice: Decimal?
    public let collectionId: Int?
    public let collectionName: String?
    public let collectionViewUrl: URL?
    public let discCount: Int?
    public let discNumber: Int?
    public let longDescription: String?
    public let previewUrl: URL?
    public let shortDescription: String?
    public let trackCount: Int?
    public let trackHdPrice: Decimal?
    public let trackNumber: Int?
    public let trackTimeMillis: Int?

    public required init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: TVEpisodeTrackCodingKeys.self)
        self.collectionCensoredName = try values.decodeIfPresent(String.self, forKey: .collectionCensoredName)
        self.collectionHdPrice = try values.decodeIfPresent(Decimal.self, forKey: .collectionHdPrice)
        self.collectionId = try values.decodeIfPresent(Int.self, forKey: .collectionId)
        self.collectionName = try values.decodeIfPresent(String.self, forKey: .collectionName)
        self.collectionViewUrl = try values.decodeIfPresent(URL.self, forKey: .collectionViewUrl)
        self.discCount = try values.decodeIfPresent(Int.self, forKey: .discCount)
        self.discNumber = try values.decodeIfPresent(Int.self, forKey: .discNumber)
        self.longDescription = try values.decodeIfPresent(String.self, forKey: .longDescription)
        self.previewUrl = try values.decodeIfPresent(URL.self, forKey: .previewUrl)
        self.shortDescription = try values.decodeIfPresent(String.self, forKey: .shortDescription)
        self.trackCount = try values.decodeIfPresent(Int.self, forKey: .trackCount)
        self.trackHdPrice = try values.decodeIfPresent(Decimal.self, forKey: .trackHdPrice)
        self.trackNumber = try values.decodeIfPresent(Int.self, forKey: .trackNumber)
        self.trackTimeMillis = try values.decodeIfPresent(Int.self, forKey: .trackTimeMillis)
        
        try super.init(from: decoder)
    }
    
    public enum TVEpisodeTrackCodingKeys:String, CodingKey {
        case collectionCensoredName, collectionHdPrice, collectionId, collectionName, collectionViewUrl, discCount, discNumber, longDescription, previewUrl, shortDescription, trackCount, trackHdPrice, trackNumber, trackTimeMillis
    }
}
